// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using onelink_tax_rule_engine.Api.Data;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250701051406_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("onelink_tax_rule_engine.Api.Models.Claim", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimID"));

                    b.Property<decimal>("ClaimAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClaimTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ClaimantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimID");

                    b.HasIndex("ClaimTypeID");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("onelink_tax_rule_engine.Api.Models.ClaimType", b =>
                {
                    b.Property<int>("ClaimTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimTypeID"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimTypeID");

                    b.ToTable("ClaimTypes");

                    b.HasData(
                        new
                        {
                            ClaimTypeID = 1,
                            TypeName = "Auto"
                        },
                        new
                        {
                            ClaimTypeID = 2,
                            TypeName = "Home"
                        },
                        new
                        {
                            ClaimTypeID = 3,
                            TypeName = "Health"
                        },
                        new
                        {
                            ClaimTypeID = 4,
                            TypeName = "Travel"
                        },
                        new
                        {
                            ClaimTypeID = 5,
                            TypeName = "Life"
                        });
                });

            modelBuilder.Entity("onelink_tax_rule_engine.Api.Models.Claim", b =>
                {
                    b.HasOne("onelink_tax_rule_engine.Api.Models.ClaimType", "ClaimType")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaimType");
                });

            modelBuilder.Entity("onelink_tax_rule_engine.Api.Models.ClaimType", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
